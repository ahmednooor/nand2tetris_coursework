// [File] StackTest.vm
// push
@17
D=A
@SP
M=M+1
A=M-1
M=D
// push
@17
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTN54201505f67f4203ac2829120f2d6b67
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JEQ
0;JMP
(RTN54201505f67f4203ac2829120f2d6b67)
// push
@17
D=A
@SP
M=M+1
A=M-1
M=D
// push
@16
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTN2bd741e70f92403f9bdbb28106bc596f
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JEQ
0;JMP
(RTN2bd741e70f92403f9bdbb28106bc596f)
// push
@16
D=A
@SP
M=M+1
A=M-1
M=D
// push
@17
D=A
@SP
M=M+1
A=M-1
M=D
// eq
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTNfd4bf39f4ba2482aa2a09f42450c0d69
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JEQ
0;JMP
(RTNfd4bf39f4ba2482aa2a09f42450c0d69)
// push
@892
D=A
@SP
M=M+1
A=M-1
M=D
// push
@891
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTNd8d072458c6a42fa909817be5139ef6e
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JLT
0;JMP
(RTNd8d072458c6a42fa909817be5139ef6e)
// push
@891
D=A
@SP
M=M+1
A=M-1
M=D
// push
@892
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTNb92b662a85724bd9957c96e04d02767f
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JLT
0;JMP
(RTNb92b662a85724bd9957c96e04d02767f)
// push
@891
D=A
@SP
M=M+1
A=M-1
M=D
// push
@891
D=A
@SP
M=M+1
A=M-1
M=D
// lt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTN0b96c1efe802414489ac12db08838419
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JLT
0;JMP
(RTN0b96c1efe802414489ac12db08838419)
// push
@32767
D=A
@SP
M=M+1
A=M-1
M=D
// push
@32766
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTNc20359b740aa41b1a52e0af9a97e2e95
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JGT
0;JMP
(RTNc20359b740aa41b1a52e0af9a97e2e95)
// push
@32766
D=A
@SP
M=M+1
A=M-1
M=D
// push
@32767
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTN8e4779eb2bd5494d9bd3f62b96f3a521
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JGT
0;JMP
(RTN8e4779eb2bd5494d9bd3f62b96f3a521)
// push
@32766
D=A
@SP
M=M+1
A=M-1
M=D
// push
@32766
D=A
@SP
M=M+1
A=M-1
M=D
// gt
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
@RTN2e54bbc693c44f4a988004b9d841da24
D=A
@SP
A=M
M=D
@EQ_GT_LT_ROUTINE_JGT
0;JMP
(RTN2e54bbc693c44f4a988004b9d841da24)
// push
@57
D=A
@SP
M=M+1
A=M-1
M=D
// push
@31
D=A
@SP
M=M+1
A=M-1
M=D
// push
@53
D=A
@SP
M=M+1
A=M-1
M=D
// add
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M+D
// push
@112
D=A
@SP
M=M+1
A=M-1
M=D
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M-D
// neg
@SP
A=M-1
M=-M
// and
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M&D
// push
@82
D=A
@SP
M=M+1
A=M-1
M=D
// or
@SP
M=M-1
A=M
D=M
@SP
A=M-1
M=M|D
// not
@SP
A=M-1
M=!M
// End Of Program
@END
(END)
0;JMP
// Routine to check eq, gt and lt
(EQ_GT_LT_ROUTINE_JEQ)
@SP
A=M-1
D=M
@EQ_GT_LT_ROUTINE_TRUE
D;JEQ
@SP
A=M-1
M=0
@EQ_GT_LT_ROUTINE_RET
0;JMP
(EQ_GT_LT_ROUTINE_JGT)
@SP
A=M-1
D=M
@EQ_GT_LT_ROUTINE_TRUE
D;JGT
@SP
A=M-1
M=0
@EQ_GT_LT_ROUTINE_RET
0;JMP
(EQ_GT_LT_ROUTINE_JLT)
@SP
A=M-1
D=M
@EQ_GT_LT_ROUTINE_TRUE
D;JLT
@SP
A=M-1
M=0
@EQ_GT_LT_ROUTINE_RET
0;JMP
(EQ_GT_LT_ROUTINE_TRUE)
@SP
A=M-1
M=-1
(EQ_GT_LT_ROUTINE_RET)
@SP
A=M
A=M
0;JMP
// RETURN_ROUTINE
(RETURN_ROUTINE)
@5
D=A
@LCL
A=M-D
D=M

@SP
A=M
M=D


@SP
A=M-1
D=M

@ARG
A=M
M=D


@1
D=A
@LCL
A=M-D
D=M
@THAT
M=D

@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D

@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D

@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D

@SP
A=M
A=M
0;JMP
